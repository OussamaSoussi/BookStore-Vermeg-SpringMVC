package com.vermeg.polytech.controllers;

import static org.mockito.ArgumentMatchers.any;
import static org.junit.Assert.*;
import static org.mockito.Mockito.doNothing;
import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.post;
import static org.springframework.test.web.servlet.result.MockMvcResultHandlers.print;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;

import org.junit.Before;
import org.junit.Test;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.MockitoAnnotations;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.MediaType;
import org.springframework.test.web.servlet.MockMvc;
import org.springframework.test.web.servlet.setup.MockMvcBuilders;

import com.vermeg.polytech.Service.IService;
import com.vermeg.polytech.model.User;
import com.vermeg.polytech.utils.Mapper;

public class UserControllerTest {
	
	@Autowired
	private MockMvc mockMvc;
	@Mock
	private IService<User> mockedUserService;
	@InjectMocks
	private BookController bookController;
	
	@Before
	public void setup() {
		MockitoAnnotations.initMocks(this);
		this.mockMvc = MockMvcBuilders.standaloneSetup(bookController).build();
	}

	@Test
	public void testFind() throws Exception {
		fail("Not yet implemented");
	}

	@Test
	public void testAdd() throws Exception {
		User user = new User(1,"oussema","osoussi@vermeg.com","azert12",23703187);
		doNothing().when(this.mockedUserService).add(any(User.class));
		this.mockMvc.perform(post("/user/add").contentType(MediaType.APPLICATION_JSON)
				.content(Mapper.asJsonString(user))
		.andExpect(status().isOk())
		.andDo(print());
	}

	@Test
	public void testUpdate() throws Exception {
		fail("Not yet implemented");
	}

	@Test
	public void testDelete() throws Exception{
		fail("Not yet implemented");
	}

}
