package com.vermeg.polytech.controllers;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.vermeg.polytech.Service.IService;
import com.vermeg.polytech.model.Order;
import com.vermeg.polytech.*;
@CrossOrigin(origins = "http://localhost:4200", allowedHeaders="*")
@RestController
@RequestMapping("/order")
public class OrderController {
	@Autowired
	private IService<Order> orderService;
	public OrderController() {
		
	}
	public OrderController(IService<Order> orderService) {
		this.orderService = orderService;
	}
	
	@RequestMapping(value = "/find", method = RequestMethod.GET, produces = "application/json")
	public List<Order> find() {
		return this.orderService.find();
	}
	
	@RequestMapping(value = "/add", method = RequestMethod.POST)
	public void add(@RequestBody Order order) {
		this.orderService.add(order);
	}
	
	@RequestMapping(value="/update", method = RequestMethod.PUT)
	public void update (@RequestBody Order order) {
		this.orderService.update(order);
	}
	
	@RequestMapping(value="/delete", method = RequestMethod.DELETE)
	public void delete(@RequestBody Order order) {
		this.orderService.delete(order);
	}
	
	@RequestMapping(value="/find/{id}", method = RequestMethod.GET, produces = "application/json")
	public Order findById(@PathVariable int id) {
		return this.orderService.findById(id);
	}
	
	@RequestMapping(value = "calculate", method = RequestMethod.GET)
	public double calculate(@RequestParam int id, @RequestParam int qte ) {
		System.out.println(orderService.calculate(getBook(id).getPrice(), qte));
		return orderService.calculate(getBook(id).getPrice(), qte);
	}
	
	public IService<Order> getOrderService() {
		return orderService;
	}
	public void setOrderService(IService<Order> orderService) {
		this.orderService = orderService;
	}
}